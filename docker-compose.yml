version: "3.4"

services:
  database:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=api-platform
      - POSTGRES_USER=api-platform
    volumes:
      - db_data:/var/lib/postgresql/data:rw

  redis:
    image: redis:latest
    restart: unless-stopped

  php:
    build:
      context: ./
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - api-tier
      - default

  caddy:
    build:
      context: ./
      target: api_platform_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp
    networks:
      - api-tier
      - client-tier

volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:

networks:
  client-tier:
  api-tier:
